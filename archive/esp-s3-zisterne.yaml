# Komplette ESPHome-Konfiguration für die Zisternen-Anzeige.
# Die Touchscreen-Konfiguration wurde erneut korrigiert, um die Achsen
# an die 90°-Display-Drehung und die Benutzereingaben anzupassen.

esphome:
  name: esp32-zisterne-material
  platformio_options:
    upload_speed: 921600
    board_build.flash_mode: dio
    board_build.f_flash: 80000000L
    board_build.f_cpu: 240000000L

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y

psram:
  mode: octal
  speed: 80MHz

logger:
  baud_rate: 9600

api:
  encryption:
    key: "8WMGsJpvgylmOrxg33VZkQ/wM64R++vhJTJRAkXlSoQ="

ota:
  - platform: esphome
    password: "75fb459c114f5ed4b7d0e54f3bc83327"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Esp-S3-Zisterne Fallback Hotspot"
    password: "v5Tpb3PpHSLd"
  power_save_mode: light
  fast_connect: true
  
captive_portal:

# Globale Variablen für Konfiguration, Zähler und Display-Status
globals:
  # Zisternen-Konfiguration
  - id: g_total_height
    type: float
    initial_value: "1.40"
    restore_value: true
  - id: g_blind_zone
    type: float
    initial_value: "0.20"
    restore_value: true
  - id: g_tank_capacity
    type: float
    initial_value: "1500"
    restore_value: true
  
  # Display-Konfiguration
  - id: g_display_page
    type: int
    initial_value: "0"
  - id: g_last_activity_timestamp
    type: float
    initial_value: "0.0"
  - id: g_display_timeout
    type: int
    initial_value: "60"  # Sekunden
    restore_value: true
  
  # Alarm-Konfiguration
  - id: g_alarm_threshold
    type: float
    initial_value: "10.0"  # Prozent
  - id: g_warning_threshold
    type: float
    initial_value: "20.0"  # Prozent
  
  # Verbrauchszähler
  - id: g_daily_consumption
    type: float
    initial_value: "0.0"
    restore_value: true
  - id: g_weekly_consumption
    type: float
    initial_value: "0.0"
    restore_value: true
  - id: g_monthly_consumption
    type: float
    initial_value: "0.0"
    restore_value: true
  - id: g_daily_gain
    type: float
    initial_value: "0.0"
    restore_value: true
  - id: g_weekly_gain
    type: float
    initial_value: "0.0"
    restore_value: true
  - id: g_monthly_gain
    type: float
    initial_value: "0.0"
    restore_value: true
  
  # Letzter Volumenwert für die Differenzberechnung
  - id: g_last_volume
    type: float
    initial_value: "0.0"
    restore_value: true

uart:
  id: uart_bus
  tx_pin: GPIO17
  rx_pin: GPIO18
  baud_rate: 9600

font:
  - file: "gfonts://Roboto"
    size: 24
    id: display_font
    glyphs:
      - ' '
      - '0123456789.:%&'
      - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
      - 'abcdefghijklmnopqrstuvwxyz'
      - 'ÄÖÜäöüß'
  - file: "gfonts://Roboto"
    size: 16
    id: display_font_klein
    glyphs:
      - ' '
      - '0123456789.:%&'
      - 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
      - 'abcdefghijklmnopqrstuvwxyz'
      - 'ÄÖÜäöüß'
      - '()[]<>{}/-\_`"'
  - file: "gfonts://Material Icons"
    size: 24
    id: material_icons
    glyphs:
      - '' # chevron_left (U+E5CB)
      - '' # chevron_right (U+E5CC)
      - '' # settings (U+E9B8)
      - '' # arrow_back (U+E5C4)

sensor:
  - platform: a02yyuw
    uart_id: uart_bus
    name: "Zisternen-Distanz (Raw)"
    id: a02yyuw_distance_raw
    unit_of_measurement: "m"
    on_value:
      then:
        - lambda: |-
            if (isnan(x) || x < 0) {
              ESP_LOGW("sensor", "Ungültiger Sensormesswert: %.2f", x);
            }

  - platform: template
    name: "Zisternen-Distanz"
    id: cistern_distance_filtered
    unit_of_measurement: "m"
    icon: "mdi:ruler"
    accuracy_decimals: 2
    update_interval: 10s
    lambda: |-
      if (isnan(id(a02yyuw_distance_raw).state)) return {};
      return id(a02yyuw_distance_raw).state;
    filters:
      - median:
          window_size: 5
          send_every: 3
      - calibrate_linear:
          - 0.0 -> 0.0
          - 4.5 -> 4.5

  - platform: template
    name: "Zisternen-Füllstand"
    id: cistern_percentage_sensor
    unit_of_measurement: "%"
    icon: "mdi:water-percent"
    accuracy_decimals: 0
    lambda: |-
      if (isnan(id(cistern_distance_filtered).state)) return {};
      
      float distance_m = id(cistern_distance_filtered).state;
      float level_m = id(g_total_height) - distance_m;
      float max_level = id(g_total_height) - id(g_blind_zone);
      
      if (max_level <= 0.0) {
        ESP_LOGW("sensor", "Ungültige Zisternen-Konfiguration");
        return 0.0;
      }
      
      float percentage = (level_m / max_level) * 100.0;
      return max(0.0f, min(100.0f, percentage));
    on_value:
      then:
        - lambda: |-
            if (!isnan(x)) {
              lv_arc_set_value(id(gauge_fill_level), (int32_t)x);
              
              lv_label_set_text_fmt(id(label_percentage), "%.0f%%", x);
              
              char buffer[32];
              sprintf(buffer, "Füllstand: %d%%", (int)x);
              lv_label_set_text(id(label_detail_percentage), buffer);
              
              if (x <= id(g_alarm_threshold)) {
                lv_label_set_text(id(label_status), "KRITISCH");
                lv_obj_set_style_text_color(id(label_status), lv_color_hex(0xFF0000), LV_PART_MAIN);
                lv_obj_set_style_bg_color(id(card_main), lv_color_hex(0x400000), LV_PART_MAIN);
              } else if (x <= id(g_warning_threshold)) {
                lv_label_set_text(id(label_status), "NIEDRIG");
                lv_obj_set_style_text_color(id(label_status), lv_color_hex(0xFFFF00), LV_PART_MAIN);
                lv_obj_set_style_bg_color(id(card_main), lv_color_hex(0x404000), LV_PART_MAIN);
              } else {
                lv_label_set_text(id(label_status), "NORMAL");
                lv_obj_set_style_text_color(id(label_status), lv_color_hex(0x34D17D), LV_PART_MAIN);
                lv_obj_set_style_bg_color(id(card_main), lv_color_hex(0x1E2A3A), LV_PART_MAIN);
              }
            }

  - platform: template
    name: "Zisternen-Füllhöhe"
    id: level
    unit_of_measurement: "cm"
    icon: "mdi:water-boiler"
    accuracy_decimals: 0
    lambda: |-
      if (isnan(id(cistern_distance_filtered).state)) return {};
      
      float distance_m = id(cistern_distance_filtered).state;
      float height_cm = (id(g_total_height) - distance_m) * 100;
      return max(0.0f, height_cm);
    on_value:
      then:
        - lambda: |-
            if (!isnan(x)) {
              char buffer[32];
              sprintf(buffer, "Höhe: %d cm", (int)x);
              lv_label_set_text(id(label_detail_height), buffer);
              
              sprintf(buffer, "Distanz: %.2f m", id(cistern_distance_filtered).state);
              lv_label_set_text(id(label_detail_distance), buffer);
            }

  - platform: template
    name: "Zisternen-Volumen"
    id: volume
    unit_of_measurement: "L"
    icon: "mdi:water"
    accuracy_decimals: 0
    lambda: |-
      if (isnan(id(cistern_distance_filtered).state)) return {};
      
      float distance_m = id(cistern_distance_filtered).state;
      float level_m = id(g_total_height) - distance_m;
      float max_level = id(g_total_height) - id(g_blind_zone);
      
      if (max_level <= 0.0) return 0.0;
      
      float volume_l = (level_m / max_level) * id(g_tank_capacity);
      return max(0.0f, volume_l);
    on_value:
      then:
        - lambda: |-
            if (!isnan(x)) {
              char buffer[32];
              sprintf(buffer, "Volumen: %d L", (int)x);
              lv_label_set_text(id(label_detail_volume), buffer);
              
              float current_volume = x;
              float last_volume = id(g_last_volume);
              
              if (last_volume > 0) {
                float change = current_volume - last_volume;
                
                if (abs(change) > 1.0) {
                  if (change < 0) {
                    float consumption = -change;
                    id(volume_change_consumption).publish_state(consumption);
                    id(g_daily_consumption) += consumption;
                    id(g_weekly_consumption) += consumption;
                    id(g_monthly_consumption) += consumption;
                    ESP_LOGI("volume", "Verbrauch: %.1f L", consumption);
                  } else {
                    float gain = change;
                    id(volume_change_gain).publish_state(gain);
                    id(g_daily_gain) += gain;
                    id(g_weekly_gain) += gain;
                    id(g_monthly_gain) += gain;
                    ESP_LOGI("volume", "Zuwachs: %.1f L", gain);
                  }
                }
              }
              
              id(g_last_volume) = current_volume;
            }

  - platform: template
    id: volume_change_consumption
    internal: true
    unit_of_measurement: "L"
    accuracy_decimals: 1

  - platform: template
    id: volume_change_gain
    internal: true
    unit_of_measurement: "L"
    accuracy_decimals: 1

  - platform: template
    name: "Tagesverbrauch Zisterne"
    id: daily_consumption
    unit_of_measurement: "L"
    icon: "mdi:water-minus-outline"
    accuracy_decimals: 0
    update_interval: 30s
    lambda: 'return id(g_daily_consumption);'

  - platform: template
    name: "Wochenverbrauch Zisterne"
    id: weekly_consumption
    unit_of_measurement: "L"
    icon: "mdi:water-minus-outline"
    accuracy_decimals: 0
    update_interval: 60s
    lambda: 'return id(g_weekly_consumption);'

  - platform: template
    name: "Monatsverbrauch Zisterne"
    id: monthly_consumption
    unit_of_measurement: "L"
    icon: "mdi:water-minus-outline"
    accuracy_decimals: 0
    update_interval: 60s
    lambda: 'return id(g_monthly_consumption);'

  - platform: template
    name: "Tageszuwachs Zisterne"
    id: daily_gain
    unit_of_measurement: "L"
    icon: "mdi:water-plus-outline"
    accuracy_decimals: 0
    update_interval: 30s
    lambda: 'return id(g_daily_gain);'

  - platform: template
    name: "Wochenzuwachs Zisterne"
    id: weekly_gain
    unit_of_measurement: "L"
    icon: "mdi:water-plus-outline"
    accuracy_decimals: 0
    update_interval: 60s
    lambda: 'return id(g_weekly_gain);'

  - platform: template
    name: "Monatszuwachs Zisterne"
    id: monthly_gain
    unit_of_measurement: "L"
    icon: "mdi:water-plus-outline"
    accuracy_decimals: 0
    update_interval: 60s
    on_value:
      then:
        - lambda: |-
            char buffer[64];
            sprintf(buffer, "Verbrauch: %d L", (int)id(daily_consumption).state);
            lv_label_set_text(id(label_daily_consumption), buffer);
            sprintf(buffer, "Zuwachs: %d L", (int)id(daily_gain).state);
            lv_label_set_text(id(label_daily_gain), buffer);
            sprintf(buffer, "Verbrauch: %d L", (int)id(weekly_consumption).state);
            lv_label_set_text(id(label_weekly_consumption), buffer);
            sprintf(buffer, "Zuwachs: %d L", (int)id(weekly_gain).state);
            lv_label_set_text(id(label_weekly_gain), buffer);
            sprintf(buffer, "Verbrauch: %d L", (int)id(monthly_consumption).state);
            lv_label_set_text(id(label_monthly_consumption), buffer);
            sprintf(buffer, "Zuwachs: %d L", (int)id(monthly_gain).state);
            lv_label_set_text(id(label_monthly_gain), buffer);

  - platform: uptime
    name: "Laufzeit"
    id: uptime_sensor
    internal: true
    update_interval: 10s
    on_value:
      then:
        - lambda: |-
            char buffer[256];
            sprintf(buffer, "Uptime: %d s\nRSSI: %d dBm", 
              (int)id(uptime_sensor).state, 
              (int)id(wifi_rssi_sensor).state);
            lv_label_set_text(id(label_system_info), buffer);

  - platform: wifi_signal
    name: "WLAN-Signalstärke"
    id: wifi_rssi_sensor
    internal: true
    update_interval: 30s

text_sensor:
  - platform: version
    name: "ESPHome Version"
    id: esphome_version
    hide_timestamp: true
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(systemversion), id(esphome_version).state.c_str());

binary_sensor:
  - platform: template
    name: "Zisterne Warnung Niedrig"
    id: cistern_warning
    device_class: problem
    icon: "mdi:alert"
    lambda: |-
      return id(cistern_percentage_sensor).state < id(g_warning_threshold);

  - platform: template
    name: "Zisternenalarm Wasserstand"
    id: cistern_alarm
    device_class: problem
    icon: "mdi:alert-circle"
    lambda: |-
      return id(cistern_percentage_sensor).state < id(g_alarm_threshold);
    on_state:
      then:
        - lambda: |-
            if (id(cistern_alarm).state) {
              ESP_LOGW("alarm", "KRITISCHER WASSERSTAND: %.1f%%", id(cistern_percentage_sensor).state);
              id(g_display_page) = 4;
              lv_scr_load(id(page_alarm)->obj);
            } else {
              ESP_LOGI("alarm", "Wasserstand wieder normal: %.1f%%", id(cistern_percentage_sensor).state);
              id(g_display_page) = 0;
              lv_scr_load(id(page_level_bar)->obj);
            }

time:
  - platform: sntp
    id: sntp_time
    on_time:
      - cron: "0 0 0 * * *"
        then:
          - globals.set: { id: g_daily_consumption, value: "0.0" }
          - globals.set: { id: g_daily_gain, value: "0.0" }
          - logger.log: "Tageszähler zurückgesetzt."
      
      - cron: "0 0 0 * * SUN"
        then:
          - globals.set: { id: g_weekly_consumption, value: "0.0" }
          - globals.set: { id: g_weekly_gain, value: "0.0" }
          - logger.log: "Wochenzähler zurückgesetzt."
      
      - cron: "0 0 0 1 * *"
        then:
          - globals.set: { id: g_monthly_consumption, value: "0.0" }
          - globals.set: { id: g_monthly_gain, value: "0.0" }
          - logger.log: "Monatszähler zurückgesetzt."
      
      - seconds: /5
        then:
          - if:
              condition:
                lambda: |-
                  float current_time = id(sntp_time).now().timestamp;
                  float last_activity = id(g_last_activity_timestamp);
                  return (current_time - last_activity) > id(g_display_timeout);
              then:
                - if:
                    condition:
                      lambda: 'return id(cistern_alarm).state == false;'
                    then:
                      - light.turn_off: my_backlight
                      - globals.set:
                          id: g_display_page
                          value: "0"
                      - lambda: |-
                          lv_scr_load(id(page_level_bar)->obj);

spi:
  id: display_qspi
  type: quad
  clk_pin: 47
  data_pins: [21, 48, 40, 39]

i2c:
  sda: 4
  scl: 8
  id: touchscreen_bus

display:
  - platform: qspi_dbi
    model: axs15231
    data_rate: 40MHz
    id: my_display
    spi_id: display_qspi
    dimensions:
      height: 480
      width: 320
    cs_pin: 45
    rotation: 90
    auto_clear_enabled: false

output:
  - platform: ledc
    pin: GPIO1
    id: backlight

light:
  - platform: monochromatic
    output: backlight
    name: "backlight Light"
    id: my_backlight
    restore_mode: ALWAYS_ON

touchscreen:
  - platform: axs15231
    id: my_touch
    display: my_display
    i2c_id: touchscreen_bus
    calibration:
      x_min: 0
      x_max: 461
      y_min: 0
      y_max: 310
    transform:
      # Achsen vertauscht und x-Achse gespiegelt, um die 90°-Drehung zu korrigieren.
      # Diese Kombination sollte die vorherige Fehlinterpretation korrigieren.
      swap_xy: true
      mirror_x: false
      mirror_y: true
    on_touch:
      then:
        - lambda: |-
            id(g_last_activity_timestamp) = id(sntp_time).now().timestamp;
            ESP_LOGD("touchscreen", "Touch-Ereignis registriert!");
        - light.turn_on: my_backlight

lvgl:
  id: lvgl_display
  draw_rounding: 8
  displays: my_display
  touchscreens: my_touch
  bg_color: 0x1A1A1A
  border_width: 0
  outline_width: 0
  theme:
    obj:
      bg_color: 0x1E2A3A # Dunkles Blaugrau
      radius: 12
      shadow_width: 8
      shadow_spread: 2
      shadow_color: 0x111111
      pad_all: 10
    label:
      text_color: 0xFFFFFF
    button:
      bg_color: 0x3454D1 # Kräftiges Blau (verbessert)
      radius: 8
      shadow_width: 4
      shadow_spread: 1
      shadow_color: 0x000000
    textarea:
      radius: 8
      bg_color: 0x111111
      border_color: 0x3F5774 # Dunkles Blaugrau
      border_width: 2
      text_color: 0xFFFFFF
    slider:
      bg_color: 0x111111
      radius: 8
      indicator:
        bg_color: 0x3454D1 # Kräftiges Blau
        radius: 8
      knob:
        bg_color: 0xFFFFFF
        radius: 12
    bar:
      bg_color: 0x111111
      radius: 12
      indicator:
        bg_color: 0x3454D1 # Kräftiges Blau
        radius: 12
        
  pages:
    # Seite 1: Hauptansicht mit Füllstandsanzeige (Arc)
    - id: page_level_bar
      widgets:
        - obj:
            id: header_bar_1
            align: TOP_MID
            width: 480
            height: 60
            y: 0
            bg_color: 0x111111
            widgets:
              # Navigationsbuttons
              - button:
                  id: nav_left_1
                  align: LEFT_MID
                  x: 10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Links' geklickt (von Hauptseite)"
                      - lambda: |-
                          lv_scr_load(id(page_system_info)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CB" # chevron_left
                        align: CENTER
              - button:
                  id: nav_right_1
                  align: RIGHT_MID
                  x: -10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Rechts' geklickt (von Hauptseite)"
                      - lambda: |-
                          lv_scr_load(id(page_detailed_values)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CC" # chevron_right
                        align: CENTER

        # Haupt-Inhaltsbereich
        - obj:
            id: main_content_area
            align: TOP_MID
            y: 60
            x: 0
            width: 480
            height: 260
            widgets:
              - label:
                  align: TOP_MID
                  y: 10
                  text_font: display_font_klein
                  text: "Zisternen-Füllstand"
                  text_color: 0xFFFFFF
              
              - obj:
                  id: card_main
                  align: CENTER
                  height: 230
                  width: 440
                  bg_color: 0x1E2A3A
                  radius: 12
                  widgets:
                    - label:
                        id: label_status
                        align: TOP_MID
                        y: 10
                        text_font: display_font
                        text: "STATUS"
                        text_color: 0x34D17D
                    
                    - arc:
                        id: gauge_fill_level
                        align: CENTER
                        y: 5
                        height: 200
                        width: 200
                        arc_width: 25
                        arc_color: 0x1A4280
                        arc_rounded: true
                        border_color: 0x333333
                        border_width: 0
                        value: 50
                        indicator:
                          arc_width: 25
                          arc_color: 0x3454D1
                        knob:
                          radius: 5
                    
                    - label:
                        id: label_percentage
                        align: CENTER
                        y: 25
                        text_font: display_font
                        text: "xx %"
                        text_color: 0xFFFFFF

    # Seite 2: Detaillierte Messwerte
    - id: page_detailed_values
      widgets:
        - obj:
            id: header_bar_2
            align: TOP_MID
            width: 480
            height: 60
            y: 0
            bg_color: 0x111111
            widgets:
              # Navigationsbuttons
              - button:
                  id: nav_left_2
                  align: LEFT_MID
                  x: 10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Links' geklickt (von Detailseite)"
                      - lambda: |-
                          lv_scr_load(id(page_level_bar)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CB" # chevron_left
                        align: CENTER
              - button:
                  id: nav_right_2
                  align: RIGHT_MID
                  x: -10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Rechts' geklickt (von Detailseite)"
                      - lambda: |-
                          lv_scr_load(id(page_consumption)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CC" # chevron_right
                        align: CENTER
        # Haupt-Inhaltsbereich
        - obj:
            id: detailed_content_area
            align: TOP_MID
            y: 60
            x: 0
            width: 480
            height: 260
            widgets:
              - label:
                  align: TOP_MID
                  y: 10
                  text_font: display_font_klein
                  text: "Detaillierte Messwerte"
                  text_color: 0xFFFFFF
              
              - obj:
                  align: CENTER
                  height: 230
                  width: 440
                  widgets:
                    - label:
                        id: label_detail_percentage
                        align: TOP_LEFT
                        x: 10
                        y: 10
                        text_font: display_font_klein
                        text: "Füllstand: 0%"
                        text_color: 0xFFFFFF
                    - label:
                        id: label_detail_height
                        align: TOP_LEFT
                        x: 10
                        y: 60
                        text_font: display_font_klein
                        text: "Höhe: 0 cm"
                        text_color: 0xFFFFFF
                    - label:
                        id: label_detail_volume
                        align: TOP_LEFT
                        x: 10
                        y: 110
                        text_font: display_font_klein
                        text: "Volumen: 0 L"
                        text_color: 0xFFFFFF
                    - label:
                        id: label_detail_distance
                        align: TOP_LEFT
                        x: 10
                        y: 160
                        text_font: display_font_klein
                        text: "Distanz: 0.00 m"
                        text_color: 0xFFFFFF

    # Seite 3: Verbrauch & Zuwachs
    - id: page_consumption
      widgets:
        - obj:
            id: header_bar_3
            align: TOP_MID
            width: 480
            height: 60
            y: 0
            bg_color: 0x111111
            widgets:
              # Navigationsbuttons
              - button:
                  id: nav_left_3
                  align: LEFT_MID
                  x: 10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Links' geklickt (von Verbrauchseite)"
                      - lambda: |-
                          lv_scr_load(id(page_detailed_values)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CB" # chevron_left
                        align: CENTER
              - button:
                  id: nav_right_3
                  align: RIGHT_MID
                  x: -10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Rechts' geklickt (von Verbrauchseite)"
                      - lambda: |-
                          lv_scr_load(id(page_system_info)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CC" # chevron_right
                        align: CENTER
        # Haupt-Inhaltsbereich
        - obj:
            id: consumption_content_area
            align: TOP_MID
            y: 60
            x: 0
            width: 480
            height: 260
            widgets:
              - label:
                  align: TOP_MID
                  y: 10
                  text_font: display_font_klein
                  text: "Verbrauch & Zuwachs"
                  text_color: 0xFFFFFF
              
              - obj:
                  align: CENTER
                  height: 230
                  width: 440
                  widgets:
                    - label:
                        align: TOP_LEFT
                        x: 10
                        y: 10
                        text_font: display_font_klein
                        text: "Heute"
                        text_color: 0xAAAAAA
                    - label:
                        id: label_daily_consumption
                        align: TOP_LEFT
                        x: 10
                        y: 45
                        text_font: display_font_klein
                        text: "Verbrauch: 0 L"
                        text_color: 0xFF6666
                    - label:
                        id: label_daily_gain
                        align: TOP_LEFT
                        x: 10
                        y: 80
                        text_font: display_font_klein
                        text: "Zuwachs: 0 L"
                        text_color: 0x66FF66
                    
                    - label:
                        align: TOP_MID
                        x: 0
                        y: 10
                        text_font: display_font_klein
                        text: "Diese Woche"
                        text_color: 0xAAAAAA
                    - label:
                        id: label_weekly_consumption
                        align: TOP_MID
                        x: 0
                        y: 45
                        text_font: display_font_klein
                        text: "Verbrauch: 0 L"
                        text_color: 0xFF6666
                    - label:
                        id: label_weekly_gain
                        align: TOP_MID
                        x: 0
                        y: 80
                        text_font: display_font_klein
                        text: "Zuwachs: 0 L"
                        text_color: 0x66FF66
                    
                    - label:
                        align: TOP_RIGHT
                        x: -10
                        y: 10
                        text_font: display_font_klein
                        text: "Dieser Monat"
                        text_color: 0xAAAAAA
                    - label:
                        id: label_monthly_consumption
                        align: TOP_RIGHT
                        x: -10
                        y: 45
                        text_font: display_font_klein
                        text: "Verbrauch: 0 L"
                        text_color: 0xFF6666
                    - label:
                        id: label_monthly_gain
                        align: TOP_RIGHT
                        x: -10
                        y: 80
                        text_font: display_font_klein
                        text: "Zuwachs: 0 L"
                        text_color: 0x66FF66

    # Seite 4: Systeminformationen
    - id: page_system_info
      widgets:
        - obj:
            id: header_bar_4
            align: TOP_MID
            width: 480
            height: 60
            y: 0
            bg_color: 0x111111
            widgets:
              # Navigationsbuttons
              - button:
                  id: nav_left_4
                  align: LEFT_MID
                  x: 10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Links' geklickt (von Systemseite)"
                      - lambda: |-
                          lv_scr_load(id(page_consumption)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CB" # chevron_left
                        align: CENTER
              - button:
                  id: nav_right_4
                  align: RIGHT_MID
                  x: -10
                  height: 60
                  width: 60
                  bg_color: 0x3454D1
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Rechts' geklickt (von Systemseite)"
                      - lambda: |-
                          lv_scr_load(id(page_level_bar)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5CC" # chevron_right
                        align: CENTER
        # Haupt-Inhaltsbereich
        - obj:
            id: system_content_area
            align: TOP_MID
            y: 60
            x: 0
            width: 480
            height: 260
            widgets:
              - label:
                  align: TOP_MID
                  y: 10
                  text_font: display_font_klein
                  text: "Systeminformationen"
                  text_color: 0xFFFFFF
              
              - obj:
                  align: CENTER
                  height: 230
                  width: 440
                  widgets:
                    - label:
                        id: label_system_info
                        align: TOP_LEFT
                        x: 10
                        y: 10
                        text_align: LEFT
                        text_font: display_font_klein
                        text: "Wird geladen..."
                        text_color: 0xFFFFFF
                    - label:
                        align: BOTTOM_LEFT
                        x: 10
                        y: -50
                        text_align: LEFT
                        text_font: display_font_klein
                        text: "ESPHome Version:"
                        text_color: 0xAAAAAA
                    - label:
                        id: systemversion
                        align: BOTTOM_RIGHT
                        x: -10
                        y: -50
                        text_align: RIGHT
                        text_font: display_font_klein
                        text: "unknown"
                        text_color: 0xFFFFFF

    # Seite 5: Alarmseite
    - id: page_alarm
      widgets:
        - obj:
            id: alarm_content_area
            align: TOP_MID
            x: 0
            y: 0
            width: 480
            height: 320
            bg_color: 0x2C3E50
            widgets:
              - label:
                  align: CENTER
                  text: "KRITISCHER WASSERSTAND!"
                  text_font: display_font
                  text_color: 0xFF0000
              - label:
                  align: CENTER
                  y: 40
                  text: "Bitte prüfen Sie Ihre Zisterne."
                  text_font: display_font_klein
                  text_color: 0xFFFFFF
              - button:
                  id: nav_back_alarm
                  align: BOTTOM_MID
                  y: -10
                  width: 100
                  height: 50
                  bg_color: 0xFF0000
                  on_click:
                    then:
                      - logger.log: "Nav-Button 'Zurück' auf Alarmseite geklickt"
                      - globals.set: { id: g_display_page, value: "0" }
                      - lambda: |-
                          lv_scr_load(id(page_level_bar)->obj);
                  widgets:
                    - label:
                        text_font: material_icons
                        text: "\uE5C4" # arrow_back
                        align: CENTER
